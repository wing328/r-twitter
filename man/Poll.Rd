% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/poll.R
\docType{class}
\name{Poll}
\alias{Poll}
\title{Poll}
\format{
An \code{R6Class} generator object
}
\description{
Poll Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{duration_minutes}}{integer [optional]}

\item{\code{end_datetime}}{character [optional]}

\item{\code{id}}{character}

\item{\code{options}}{list( \link{PollOption} )}

\item{\code{voting_status}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Poll-new}{\code{Poll$new()}}
\item \href{#method-Poll-toJSON}{\code{Poll$toJSON()}}
\item \href{#method-Poll-fromJSON}{\code{Poll$fromJSON()}}
\item \href{#method-Poll-toJSONString}{\code{Poll$toJSONString()}}
\item \href{#method-Poll-fromJSONString}{\code{Poll$fromJSONString()}}
\item \href{#method-Poll-validateJSON}{\code{Poll$validateJSON()}}
\item \href{#method-Poll-toString}{\code{Poll$toString()}}
\item \href{#method-Poll-isValid}{\code{Poll$isValid()}}
\item \href{#method-Poll-getInvalidFields}{\code{Poll$getInvalidFields()}}
\item \href{#method-Poll-clone}{\code{Poll$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Poll-new"></a>}}
\if{latex}{\out{\hypertarget{method-Poll-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Poll class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Poll$new(
  id,
  options,
  duration_minutes = NULL,
  end_datetime = NULL,
  voting_status = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Unique identifier of this poll.}

\item{\code{options}}{options}

\item{\code{duration_minutes}}{duration_minutes}

\item{\code{end_datetime}}{end_datetime}

\item{\code{voting_status}}{voting_status}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Poll-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Poll-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Poll$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Poll in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Poll-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Poll-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Poll
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Poll$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Poll
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Poll-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Poll-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Poll$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Poll in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Poll-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Poll-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Poll
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Poll$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Poll
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Poll-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Poll-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Poll and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Poll$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Poll-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Poll-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Poll$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Poll
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Poll-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Poll-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Poll$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Poll-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Poll-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Poll$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Poll-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Poll-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Poll$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
