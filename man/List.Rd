% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list.R
\docType{class}
\name{List}
\alias{List}
\title{List}
\format{
An \code{R6Class} generator object
}
\description{
List Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{created_at}}{character [optional]}

\item{\code{description}}{character [optional]}

\item{\code{follower_count}}{integer [optional]}

\item{\code{id}}{character}

\item{\code{member_count}}{integer [optional]}

\item{\code{name}}{character}

\item{\code{owner_id}}{character [optional]}

\item{\code{item_private}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-List-new}{\code{List$new()}}
\item \href{#method-List-toJSON}{\code{List$toJSON()}}
\item \href{#method-List-fromJSON}{\code{List$fromJSON()}}
\item \href{#method-List-toJSONString}{\code{List$toJSONString()}}
\item \href{#method-List-fromJSONString}{\code{List$fromJSONString()}}
\item \href{#method-List-validateJSON}{\code{List$validateJSON()}}
\item \href{#method-List-toString}{\code{List$toString()}}
\item \href{#method-List-isValid}{\code{List$isValid()}}
\item \href{#method-List-getInvalidFields}{\code{List$getInvalidFields()}}
\item \href{#method-List-clone}{\code{List$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-List-new"></a>}}
\if{latex}{\out{\hypertarget{method-List-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new List class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{List$new(
  id,
  name,
  created_at = NULL,
  description = NULL,
  follower_count = NULL,
  member_count = NULL,
  owner_id = NULL,
  item_private = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The unique identifier of this List.}

\item{\code{name}}{The name of this List.}

\item{\code{created_at}}{created_at}

\item{\code{description}}{description}

\item{\code{follower_count}}{follower_count}

\item{\code{member_count}}{member_count}

\item{\code{owner_id}}{Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.}

\item{\code{item_private}}{item_private}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-List-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-List-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{List$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-List-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-List-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of List
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{List$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of List
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-List-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-List-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{List$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
List in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-List-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-List-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of List
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{List$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of List
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-List-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-List-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to List and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{List$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-List-toString"></a>}}
\if{latex}{\out{\hypertarget{method-List-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{List$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of List
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-List-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-List-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{List$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-List-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-List-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{List$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-List-clone"></a>}}
\if{latex}{\out{\hypertarget{method-List-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{List$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
