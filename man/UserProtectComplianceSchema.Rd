% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/user_protect_compliance_schema.R
\docType{class}
\name{UserProtectComplianceSchema}
\alias{UserProtectComplianceSchema}
\title{UserProtectComplianceSchema}
\format{
An \code{R6Class} generator object
}
\description{
UserProtectComplianceSchema Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{user_protect}}{\link{UserComplianceSchema}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-UserProtectComplianceSchema-new}{\code{UserProtectComplianceSchema$new()}}
\item \href{#method-UserProtectComplianceSchema-toJSON}{\code{UserProtectComplianceSchema$toJSON()}}
\item \href{#method-UserProtectComplianceSchema-fromJSON}{\code{UserProtectComplianceSchema$fromJSON()}}
\item \href{#method-UserProtectComplianceSchema-toJSONString}{\code{UserProtectComplianceSchema$toJSONString()}}
\item \href{#method-UserProtectComplianceSchema-fromJSONString}{\code{UserProtectComplianceSchema$fromJSONString()}}
\item \href{#method-UserProtectComplianceSchema-validateJSON}{\code{UserProtectComplianceSchema$validateJSON()}}
\item \href{#method-UserProtectComplianceSchema-toString}{\code{UserProtectComplianceSchema$toString()}}
\item \href{#method-UserProtectComplianceSchema-isValid}{\code{UserProtectComplianceSchema$isValid()}}
\item \href{#method-UserProtectComplianceSchema-getInvalidFields}{\code{UserProtectComplianceSchema$getInvalidFields()}}
\item \href{#method-UserProtectComplianceSchema-clone}{\code{UserProtectComplianceSchema$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProtectComplianceSchema-new"></a>}}
\if{latex}{\out{\hypertarget{method-UserProtectComplianceSchema-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new UserProtectComplianceSchema class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProtectComplianceSchema$new(user_protect, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{user_protect}}{user_protect}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProtectComplianceSchema-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-UserProtectComplianceSchema-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProtectComplianceSchema$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
UserProtectComplianceSchema in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProtectComplianceSchema-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-UserProtectComplianceSchema-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of UserProtectComplianceSchema
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProtectComplianceSchema$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of UserProtectComplianceSchema
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProtectComplianceSchema-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-UserProtectComplianceSchema-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProtectComplianceSchema$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
UserProtectComplianceSchema in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProtectComplianceSchema-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-UserProtectComplianceSchema-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of UserProtectComplianceSchema
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProtectComplianceSchema$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of UserProtectComplianceSchema
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProtectComplianceSchema-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-UserProtectComplianceSchema-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to UserProtectComplianceSchema and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProtectComplianceSchema$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProtectComplianceSchema-toString"></a>}}
\if{latex}{\out{\hypertarget{method-UserProtectComplianceSchema-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProtectComplianceSchema$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of UserProtectComplianceSchema
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProtectComplianceSchema-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-UserProtectComplianceSchema-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProtectComplianceSchema$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProtectComplianceSchema-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-UserProtectComplianceSchema-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProtectComplianceSchema$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProtectComplianceSchema-clone"></a>}}
\if{latex}{\out{\hypertarget{method-UserProtectComplianceSchema-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProtectComplianceSchema$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
