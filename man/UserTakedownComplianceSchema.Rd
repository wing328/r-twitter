% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/user_takedown_compliance_schema.R
\docType{class}
\name{UserTakedownComplianceSchema}
\alias{UserTakedownComplianceSchema}
\title{UserTakedownComplianceSchema}
\format{
An \code{R6Class} generator object
}
\description{
UserTakedownComplianceSchema Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{event_at}}{character}

\item{\code{user}}{\link{UserComplianceSchemaUser}}

\item{\code{withheld_in_countries}}{list( character )}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-UserTakedownComplianceSchema-new}{\code{UserTakedownComplianceSchema$new()}}
\item \href{#method-UserTakedownComplianceSchema-toJSON}{\code{UserTakedownComplianceSchema$toJSON()}}
\item \href{#method-UserTakedownComplianceSchema-fromJSON}{\code{UserTakedownComplianceSchema$fromJSON()}}
\item \href{#method-UserTakedownComplianceSchema-toJSONString}{\code{UserTakedownComplianceSchema$toJSONString()}}
\item \href{#method-UserTakedownComplianceSchema-fromJSONString}{\code{UserTakedownComplianceSchema$fromJSONString()}}
\item \href{#method-UserTakedownComplianceSchema-validateJSON}{\code{UserTakedownComplianceSchema$validateJSON()}}
\item \href{#method-UserTakedownComplianceSchema-toString}{\code{UserTakedownComplianceSchema$toString()}}
\item \href{#method-UserTakedownComplianceSchema-isValid}{\code{UserTakedownComplianceSchema$isValid()}}
\item \href{#method-UserTakedownComplianceSchema-getInvalidFields}{\code{UserTakedownComplianceSchema$getInvalidFields()}}
\item \href{#method-UserTakedownComplianceSchema-clone}{\code{UserTakedownComplianceSchema$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserTakedownComplianceSchema-new"></a>}}
\if{latex}{\out{\hypertarget{method-UserTakedownComplianceSchema-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new UserTakedownComplianceSchema class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserTakedownComplianceSchema$new(event_at, user, withheld_in_countries, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{event_at}}{Event time.}

\item{\code{user}}{user}

\item{\code{withheld_in_countries}}{withheld_in_countries}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserTakedownComplianceSchema-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-UserTakedownComplianceSchema-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserTakedownComplianceSchema$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
UserTakedownComplianceSchema in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserTakedownComplianceSchema-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-UserTakedownComplianceSchema-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of UserTakedownComplianceSchema
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserTakedownComplianceSchema$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of UserTakedownComplianceSchema
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserTakedownComplianceSchema-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-UserTakedownComplianceSchema-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserTakedownComplianceSchema$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
UserTakedownComplianceSchema in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserTakedownComplianceSchema-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-UserTakedownComplianceSchema-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of UserTakedownComplianceSchema
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserTakedownComplianceSchema$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of UserTakedownComplianceSchema
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserTakedownComplianceSchema-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-UserTakedownComplianceSchema-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to UserTakedownComplianceSchema and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserTakedownComplianceSchema$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserTakedownComplianceSchema-toString"></a>}}
\if{latex}{\out{\hypertarget{method-UserTakedownComplianceSchema-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserTakedownComplianceSchema$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of UserTakedownComplianceSchema
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserTakedownComplianceSchema-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-UserTakedownComplianceSchema-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserTakedownComplianceSchema$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserTakedownComplianceSchema-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-UserTakedownComplianceSchema-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserTakedownComplianceSchema$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserTakedownComplianceSchema-clone"></a>}}
\if{latex}{\out{\hypertarget{method-UserTakedownComplianceSchema-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserTakedownComplianceSchema$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
