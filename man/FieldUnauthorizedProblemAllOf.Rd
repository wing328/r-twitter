% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/field_unauthorized_problem_all_of.R
\docType{class}
\name{FieldUnauthorizedProblemAllOf}
\alias{FieldUnauthorizedProblemAllOf}
\title{FieldUnauthorizedProblemAllOf}
\format{
An \code{R6Class} generator object
}
\description{
FieldUnauthorizedProblemAllOf Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{field}}{character}

\item{\code{resource_type}}{character}

\item{\code{section}}{character}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-FieldUnauthorizedProblemAllOf-new}{\code{FieldUnauthorizedProblemAllOf$new()}}
\item \href{#method-FieldUnauthorizedProblemAllOf-toJSON}{\code{FieldUnauthorizedProblemAllOf$toJSON()}}
\item \href{#method-FieldUnauthorizedProblemAllOf-fromJSON}{\code{FieldUnauthorizedProblemAllOf$fromJSON()}}
\item \href{#method-FieldUnauthorizedProblemAllOf-toJSONString}{\code{FieldUnauthorizedProblemAllOf$toJSONString()}}
\item \href{#method-FieldUnauthorizedProblemAllOf-fromJSONString}{\code{FieldUnauthorizedProblemAllOf$fromJSONString()}}
\item \href{#method-FieldUnauthorizedProblemAllOf-validateJSON}{\code{FieldUnauthorizedProblemAllOf$validateJSON()}}
\item \href{#method-FieldUnauthorizedProblemAllOf-toString}{\code{FieldUnauthorizedProblemAllOf$toString()}}
\item \href{#method-FieldUnauthorizedProblemAllOf-isValid}{\code{FieldUnauthorizedProblemAllOf$isValid()}}
\item \href{#method-FieldUnauthorizedProblemAllOf-getInvalidFields}{\code{FieldUnauthorizedProblemAllOf$getInvalidFields()}}
\item \href{#method-FieldUnauthorizedProblemAllOf-clone}{\code{FieldUnauthorizedProblemAllOf$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FieldUnauthorizedProblemAllOf-new"></a>}}
\if{latex}{\out{\hypertarget{method-FieldUnauthorizedProblemAllOf-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new FieldUnauthorizedProblemAllOf class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FieldUnauthorizedProblemAllOf$new(field, resource_type, section, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{field}}{field}

\item{\code{resource_type}}{resource_type}

\item{\code{section}}{section}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FieldUnauthorizedProblemAllOf-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-FieldUnauthorizedProblemAllOf-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FieldUnauthorizedProblemAllOf$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
FieldUnauthorizedProblemAllOf in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FieldUnauthorizedProblemAllOf-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-FieldUnauthorizedProblemAllOf-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of FieldUnauthorizedProblemAllOf
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FieldUnauthorizedProblemAllOf$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of FieldUnauthorizedProblemAllOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FieldUnauthorizedProblemAllOf-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-FieldUnauthorizedProblemAllOf-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FieldUnauthorizedProblemAllOf$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
FieldUnauthorizedProblemAllOf in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FieldUnauthorizedProblemAllOf-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-FieldUnauthorizedProblemAllOf-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of FieldUnauthorizedProblemAllOf
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FieldUnauthorizedProblemAllOf$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of FieldUnauthorizedProblemAllOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FieldUnauthorizedProblemAllOf-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-FieldUnauthorizedProblemAllOf-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to FieldUnauthorizedProblemAllOf and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FieldUnauthorizedProblemAllOf$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FieldUnauthorizedProblemAllOf-toString"></a>}}
\if{latex}{\out{\hypertarget{method-FieldUnauthorizedProblemAllOf-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FieldUnauthorizedProblemAllOf$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of FieldUnauthorizedProblemAllOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FieldUnauthorizedProblemAllOf-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-FieldUnauthorizedProblemAllOf-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FieldUnauthorizedProblemAllOf$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FieldUnauthorizedProblemAllOf-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-FieldUnauthorizedProblemAllOf-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FieldUnauthorizedProblemAllOf$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FieldUnauthorizedProblemAllOf-clone"></a>}}
\if{latex}{\out{\hypertarget{method-FieldUnauthorizedProblemAllOf-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FieldUnauthorizedProblemAllOf$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
