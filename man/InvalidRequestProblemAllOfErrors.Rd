% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/invalid_request_problem_all_of_errors.R
\docType{class}
\name{InvalidRequestProblemAllOfErrors}
\alias{InvalidRequestProblemAllOfErrors}
\title{InvalidRequestProblemAllOfErrors}
\format{
An \code{R6Class} generator object
}
\description{
InvalidRequestProblemAllOfErrors Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{message}}{character [optional]}

\item{\code{parameters}}{named list( array[character] ) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-InvalidRequestProblemAllOfErrors-new}{\code{InvalidRequestProblemAllOfErrors$new()}}
\item \href{#method-InvalidRequestProblemAllOfErrors-toJSON}{\code{InvalidRequestProblemAllOfErrors$toJSON()}}
\item \href{#method-InvalidRequestProblemAllOfErrors-fromJSON}{\code{InvalidRequestProblemAllOfErrors$fromJSON()}}
\item \href{#method-InvalidRequestProblemAllOfErrors-toJSONString}{\code{InvalidRequestProblemAllOfErrors$toJSONString()}}
\item \href{#method-InvalidRequestProblemAllOfErrors-fromJSONString}{\code{InvalidRequestProblemAllOfErrors$fromJSONString()}}
\item \href{#method-InvalidRequestProblemAllOfErrors-validateJSON}{\code{InvalidRequestProblemAllOfErrors$validateJSON()}}
\item \href{#method-InvalidRequestProblemAllOfErrors-toString}{\code{InvalidRequestProblemAllOfErrors$toString()}}
\item \href{#method-InvalidRequestProblemAllOfErrors-isValid}{\code{InvalidRequestProblemAllOfErrors$isValid()}}
\item \href{#method-InvalidRequestProblemAllOfErrors-getInvalidFields}{\code{InvalidRequestProblemAllOfErrors$getInvalidFields()}}
\item \href{#method-InvalidRequestProblemAllOfErrors-clone}{\code{InvalidRequestProblemAllOfErrors$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvalidRequestProblemAllOfErrors-new"></a>}}
\if{latex}{\out{\hypertarget{method-InvalidRequestProblemAllOfErrors-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new InvalidRequestProblemAllOfErrors class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvalidRequestProblemAllOfErrors$new(message = NULL, parameters = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{message}}{message}

\item{\code{parameters}}{parameters}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvalidRequestProblemAllOfErrors-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-InvalidRequestProblemAllOfErrors-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvalidRequestProblemAllOfErrors$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
InvalidRequestProblemAllOfErrors in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvalidRequestProblemAllOfErrors-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-InvalidRequestProblemAllOfErrors-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of InvalidRequestProblemAllOfErrors
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvalidRequestProblemAllOfErrors$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of InvalidRequestProblemAllOfErrors
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvalidRequestProblemAllOfErrors-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-InvalidRequestProblemAllOfErrors-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvalidRequestProblemAllOfErrors$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
InvalidRequestProblemAllOfErrors in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvalidRequestProblemAllOfErrors-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-InvalidRequestProblemAllOfErrors-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of InvalidRequestProblemAllOfErrors
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvalidRequestProblemAllOfErrors$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of InvalidRequestProblemAllOfErrors
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvalidRequestProblemAllOfErrors-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-InvalidRequestProblemAllOfErrors-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to InvalidRequestProblemAllOfErrors and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvalidRequestProblemAllOfErrors$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvalidRequestProblemAllOfErrors-toString"></a>}}
\if{latex}{\out{\hypertarget{method-InvalidRequestProblemAllOfErrors-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvalidRequestProblemAllOfErrors$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of InvalidRequestProblemAllOfErrors
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvalidRequestProblemAllOfErrors-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-InvalidRequestProblemAllOfErrors-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvalidRequestProblemAllOfErrors$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvalidRequestProblemAllOfErrors-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-InvalidRequestProblemAllOfErrors-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvalidRequestProblemAllOfErrors$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-InvalidRequestProblemAllOfErrors-clone"></a>}}
\if{latex}{\out{\hypertarget{method-InvalidRequestProblemAllOfErrors-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{InvalidRequestProblemAllOfErrors$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
