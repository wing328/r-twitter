% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/user.R
\docType{class}
\name{User}
\alias{User}
\title{User}
\format{
An \code{R6Class} generator object
}
\description{
User Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{created_at}}{character [optional]}

\item{\code{description}}{character [optional]}

\item{\code{entities}}{\link{UserEntities} [optional]}

\item{\code{id}}{character}

\item{\code{location}}{character [optional]}

\item{\code{name}}{character}

\item{\code{pinned_tweet_id}}{character [optional]}

\item{\code{profile_image_url}}{character [optional]}

\item{\code{protected}}{character [optional]}

\item{\code{public_metrics}}{\link{UserPublicMetrics} [optional]}

\item{\code{url}}{character [optional]}

\item{\code{username}}{character}

\item{\code{verified}}{character [optional]}

\item{\code{withheld}}{\link{UserWithheld} [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-User-new}{\code{User$new()}}
\item \href{#method-User-toJSON}{\code{User$toJSON()}}
\item \href{#method-User-fromJSON}{\code{User$fromJSON()}}
\item \href{#method-User-toJSONString}{\code{User$toJSONString()}}
\item \href{#method-User-fromJSONString}{\code{User$fromJSONString()}}
\item \href{#method-User-validateJSON}{\code{User$validateJSON()}}
\item \href{#method-User-toString}{\code{User$toString()}}
\item \href{#method-User-isValid}{\code{User$isValid()}}
\item \href{#method-User-getInvalidFields}{\code{User$getInvalidFields()}}
\item \href{#method-User-clone}{\code{User$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User-new"></a>}}
\if{latex}{\out{\hypertarget{method-User-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new User class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User$new(
  id,
  name,
  username,
  created_at = NULL,
  description = NULL,
  entities = NULL,
  location = NULL,
  pinned_tweet_id = NULL,
  profile_image_url = NULL,
  protected = NULL,
  public_metrics = NULL,
  url = NULL,
  verified = NULL,
  withheld = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.}

\item{\code{name}}{The friendly name of this User, as shown on their profile.}

\item{\code{username}}{The Twitter handle (screen name) of this user.}

\item{\code{created_at}}{Creation time of this User.}

\item{\code{description}}{The text of this User's profile description (also known as bio), if the User provided one.}

\item{\code{entities}}{entities}

\item{\code{location}}{The location specified in the User's profile, if the User provided one. As this is a freeform value, it may not indicate a valid location, but it may be fuzzily evaluated when performing searches with location queries.}

\item{\code{pinned_tweet_id}}{Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.}

\item{\code{profile_image_url}}{The URL to the profile image for this User.}

\item{\code{protected}}{Indicates if this User has chosen to protect their Tweets (in other words, if this User's Tweets are private).}

\item{\code{public_metrics}}{public_metrics}

\item{\code{url}}{The URL specified in the User's profile.}

\item{\code{verified}}{Indicate if this User is a verified Twitter User.}

\item{\code{withheld}}{withheld}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-User-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
User in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-User-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of User
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of User
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-User-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
User in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-User-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of User
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of User
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-User-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to User and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User-toString"></a>}}
\if{latex}{\out{\hypertarget{method-User-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of User
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-User-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-User-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User-clone"></a>}}
\if{latex}{\out{\hypertarget{method-User-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
