% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/connection_exception_problem_all_of.R
\docType{class}
\name{ConnectionExceptionProblemAllOf}
\alias{ConnectionExceptionProblemAllOf}
\title{ConnectionExceptionProblemAllOf}
\format{
An \code{R6Class} generator object
}
\description{
ConnectionExceptionProblemAllOf Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{connection_issue}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ConnectionExceptionProblemAllOf-new}{\code{ConnectionExceptionProblemAllOf$new()}}
\item \href{#method-ConnectionExceptionProblemAllOf-toJSON}{\code{ConnectionExceptionProblemAllOf$toJSON()}}
\item \href{#method-ConnectionExceptionProblemAllOf-fromJSON}{\code{ConnectionExceptionProblemAllOf$fromJSON()}}
\item \href{#method-ConnectionExceptionProblemAllOf-toJSONString}{\code{ConnectionExceptionProblemAllOf$toJSONString()}}
\item \href{#method-ConnectionExceptionProblemAllOf-fromJSONString}{\code{ConnectionExceptionProblemAllOf$fromJSONString()}}
\item \href{#method-ConnectionExceptionProblemAllOf-validateJSON}{\code{ConnectionExceptionProblemAllOf$validateJSON()}}
\item \href{#method-ConnectionExceptionProblemAllOf-toString}{\code{ConnectionExceptionProblemAllOf$toString()}}
\item \href{#method-ConnectionExceptionProblemAllOf-isValid}{\code{ConnectionExceptionProblemAllOf$isValid()}}
\item \href{#method-ConnectionExceptionProblemAllOf-getInvalidFields}{\code{ConnectionExceptionProblemAllOf$getInvalidFields()}}
\item \href{#method-ConnectionExceptionProblemAllOf-clone}{\code{ConnectionExceptionProblemAllOf$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionExceptionProblemAllOf-new"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionExceptionProblemAllOf-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ConnectionExceptionProblemAllOf class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionExceptionProblemAllOf$new(connection_issue = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{connection_issue}}{connection_issue}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionExceptionProblemAllOf-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionExceptionProblemAllOf-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionExceptionProblemAllOf$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ConnectionExceptionProblemAllOf in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionExceptionProblemAllOf-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionExceptionProblemAllOf-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of ConnectionExceptionProblemAllOf
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionExceptionProblemAllOf$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ConnectionExceptionProblemAllOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionExceptionProblemAllOf-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionExceptionProblemAllOf-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionExceptionProblemAllOf$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ConnectionExceptionProblemAllOf in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionExceptionProblemAllOf-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionExceptionProblemAllOf-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of ConnectionExceptionProblemAllOf
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionExceptionProblemAllOf$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ConnectionExceptionProblemAllOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionExceptionProblemAllOf-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionExceptionProblemAllOf-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to ConnectionExceptionProblemAllOf and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionExceptionProblemAllOf$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionExceptionProblemAllOf-toString"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionExceptionProblemAllOf-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionExceptionProblemAllOf$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of ConnectionExceptionProblemAllOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionExceptionProblemAllOf-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionExceptionProblemAllOf-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionExceptionProblemAllOf$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionExceptionProblemAllOf-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionExceptionProblemAllOf-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionExceptionProblemAllOf$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ConnectionExceptionProblemAllOf-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ConnectionExceptionProblemAllOf-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ConnectionExceptionProblemAllOf$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
