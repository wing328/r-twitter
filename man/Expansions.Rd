% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expansions.R
\docType{class}
\name{Expansions}
\alias{Expansions}
\title{Expansions}
\format{
An \code{R6Class} generator object
}
\description{
Expansions Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{media}}{list( \link{Media} ) [optional]}

\item{\code{places}}{list( \link{Place} ) [optional]}

\item{\code{polls}}{list( \link{Poll} ) [optional]}

\item{\code{topics}}{list( \link{Topic} ) [optional]}

\item{\code{tweets}}{list( \link{Tweet} ) [optional]}

\item{\code{users}}{list( \link{User} ) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Expansions-new}{\code{Expansions$new()}}
\item \href{#method-Expansions-toJSON}{\code{Expansions$toJSON()}}
\item \href{#method-Expansions-fromJSON}{\code{Expansions$fromJSON()}}
\item \href{#method-Expansions-toJSONString}{\code{Expansions$toJSONString()}}
\item \href{#method-Expansions-fromJSONString}{\code{Expansions$fromJSONString()}}
\item \href{#method-Expansions-validateJSON}{\code{Expansions$validateJSON()}}
\item \href{#method-Expansions-toString}{\code{Expansions$toString()}}
\item \href{#method-Expansions-isValid}{\code{Expansions$isValid()}}
\item \href{#method-Expansions-getInvalidFields}{\code{Expansions$getInvalidFields()}}
\item \href{#method-Expansions-clone}{\code{Expansions$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Expansions-new"></a>}}
\if{latex}{\out{\hypertarget{method-Expansions-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Expansions class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Expansions$new(
  media = NULL,
  places = NULL,
  polls = NULL,
  topics = NULL,
  tweets = NULL,
  users = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{media}}{media}

\item{\code{places}}{places}

\item{\code{polls}}{polls}

\item{\code{topics}}{topics}

\item{\code{tweets}}{tweets}

\item{\code{users}}{users}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Expansions-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Expansions-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Expansions$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Expansions in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Expansions-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Expansions-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Expansions
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Expansions$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Expansions
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Expansions-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Expansions-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Expansions$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Expansions in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Expansions-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Expansions-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Expansions
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Expansions$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Expansions
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Expansions-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Expansions-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Expansions and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Expansions$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Expansions-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Expansions-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Expansions$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Expansions
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Expansions-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Expansions-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Expansions$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Expansions-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Expansions-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Expansions$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Expansions-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Expansions-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Expansions$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
