% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/point.R
\docType{class}
\name{Point}
\alias{Point}
\title{Point}
\format{
An \code{R6Class} generator object
}
\description{
Point Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{coordinates}}{list( numeric )}

\item{\code{type}}{character}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Point-new}{\code{Point$new()}}
\item \href{#method-Point-toJSON}{\code{Point$toJSON()}}
\item \href{#method-Point-fromJSON}{\code{Point$fromJSON()}}
\item \href{#method-Point-toJSONString}{\code{Point$toJSONString()}}
\item \href{#method-Point-fromJSONString}{\code{Point$fromJSONString()}}
\item \href{#method-Point-validateJSON}{\code{Point$validateJSON()}}
\item \href{#method-Point-toString}{\code{Point$toString()}}
\item \href{#method-Point-isValid}{\code{Point$isValid()}}
\item \href{#method-Point-getInvalidFields}{\code{Point$getInvalidFields()}}
\item \href{#method-Point-clone}{\code{Point$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Point-new"></a>}}
\if{latex}{\out{\hypertarget{method-Point-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Point class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Point$new(coordinates, type, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{coordinates}}{A [GeoJson Position](https://tools.ietf.org/html/rfc7946#section-3.1.1) in the format `[longitude,latitude]`.}

\item{\code{type}}{type}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Point-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Point-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Point$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Point in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Point-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Point-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Point
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Point$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Point
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Point-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Point-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Point$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Point in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Point-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Point-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Point
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Point$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Point
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Point-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Point-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Point and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Point$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Point-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Point-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Point$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Point
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Point-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Point-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Point$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Point-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Point-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Point$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Point-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Point-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Point$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
