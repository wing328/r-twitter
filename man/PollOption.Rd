% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/poll_option.R
\docType{class}
\name{PollOption}
\alias{PollOption}
\title{PollOption}
\format{
An \code{R6Class} generator object
}
\description{
PollOption Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{label}}{character}

\item{\code{position}}{integer}

\item{\code{votes}}{integer}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PollOption-new}{\code{PollOption$new()}}
\item \href{#method-PollOption-toJSON}{\code{PollOption$toJSON()}}
\item \href{#method-PollOption-fromJSON}{\code{PollOption$fromJSON()}}
\item \href{#method-PollOption-toJSONString}{\code{PollOption$toJSONString()}}
\item \href{#method-PollOption-fromJSONString}{\code{PollOption$fromJSONString()}}
\item \href{#method-PollOption-validateJSON}{\code{PollOption$validateJSON()}}
\item \href{#method-PollOption-toString}{\code{PollOption$toString()}}
\item \href{#method-PollOption-isValid}{\code{PollOption$isValid()}}
\item \href{#method-PollOption-getInvalidFields}{\code{PollOption$getInvalidFields()}}
\item \href{#method-PollOption-clone}{\code{PollOption$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PollOption-new"></a>}}
\if{latex}{\out{\hypertarget{method-PollOption-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new PollOption class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PollOption$new(label, position, votes, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{label}}{The text of a poll choice.}

\item{\code{position}}{Position of this choice in the poll.}

\item{\code{votes}}{Number of users who voted for this choice.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PollOption-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PollOption-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PollOption$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PollOption in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PollOption-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PollOption-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of PollOption
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PollOption$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PollOption
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PollOption-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PollOption-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PollOption$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
PollOption in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PollOption-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-PollOption-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of PollOption
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PollOption$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of PollOption
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PollOption-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-PollOption-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to PollOption and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PollOption$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PollOption-toString"></a>}}
\if{latex}{\out{\hypertarget{method-PollOption-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PollOption$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of PollOption
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PollOption-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-PollOption-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PollOption$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PollOption-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-PollOption-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PollOption$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PollOption-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PollOption-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PollOption$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
