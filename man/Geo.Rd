% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geo.R
\docType{class}
\name{Geo}
\alias{Geo}
\title{Geo}
\format{
An \code{R6Class} generator object
}
\description{
Geo Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{bbox}}{list( numeric )}

\item{\code{geometry}}{\link{Point} [optional]}

\item{\code{properties}}{object}

\item{\code{type}}{character}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Geo-new}{\code{Geo$new()}}
\item \href{#method-Geo-toJSON}{\code{Geo$toJSON()}}
\item \href{#method-Geo-fromJSON}{\code{Geo$fromJSON()}}
\item \href{#method-Geo-toJSONString}{\code{Geo$toJSONString()}}
\item \href{#method-Geo-fromJSONString}{\code{Geo$fromJSONString()}}
\item \href{#method-Geo-validateJSON}{\code{Geo$validateJSON()}}
\item \href{#method-Geo-toString}{\code{Geo$toString()}}
\item \href{#method-Geo-isValid}{\code{Geo$isValid()}}
\item \href{#method-Geo-getInvalidFields}{\code{Geo$getInvalidFields()}}
\item \href{#method-Geo-clone}{\code{Geo$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Geo-new"></a>}}
\if{latex}{\out{\hypertarget{method-Geo-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Geo class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Geo$new(bbox, properties, type, geometry = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{bbox}}{bbox}

\item{\code{properties}}{properties}

\item{\code{type}}{type}

\item{\code{geometry}}{geometry}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Geo-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Geo-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Geo$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Geo in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Geo-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Geo-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Geo
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Geo$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Geo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Geo-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Geo-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Geo$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Geo in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Geo-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Geo-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Geo
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Geo$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Geo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Geo-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Geo-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Geo and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Geo$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Geo-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Geo-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Geo$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Geo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Geo-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Geo-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Geo$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Geo-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Geo-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Geo$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Geo-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Geo-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Geo$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
