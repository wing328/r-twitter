% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/duplicate_rule_problem_all_of.R
\docType{class}
\name{DuplicateRuleProblemAllOf}
\alias{DuplicateRuleProblemAllOf}
\title{DuplicateRuleProblemAllOf}
\format{
An \code{R6Class} generator object
}
\description{
DuplicateRuleProblemAllOf Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{id}}{character [optional]}

\item{\code{value}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DuplicateRuleProblemAllOf-new}{\code{DuplicateRuleProblemAllOf$new()}}
\item \href{#method-DuplicateRuleProblemAllOf-toJSON}{\code{DuplicateRuleProblemAllOf$toJSON()}}
\item \href{#method-DuplicateRuleProblemAllOf-fromJSON}{\code{DuplicateRuleProblemAllOf$fromJSON()}}
\item \href{#method-DuplicateRuleProblemAllOf-toJSONString}{\code{DuplicateRuleProblemAllOf$toJSONString()}}
\item \href{#method-DuplicateRuleProblemAllOf-fromJSONString}{\code{DuplicateRuleProblemAllOf$fromJSONString()}}
\item \href{#method-DuplicateRuleProblemAllOf-validateJSON}{\code{DuplicateRuleProblemAllOf$validateJSON()}}
\item \href{#method-DuplicateRuleProblemAllOf-toString}{\code{DuplicateRuleProblemAllOf$toString()}}
\item \href{#method-DuplicateRuleProblemAllOf-isValid}{\code{DuplicateRuleProblemAllOf$isValid()}}
\item \href{#method-DuplicateRuleProblemAllOf-getInvalidFields}{\code{DuplicateRuleProblemAllOf$getInvalidFields()}}
\item \href{#method-DuplicateRuleProblemAllOf-clone}{\code{DuplicateRuleProblemAllOf$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuplicateRuleProblemAllOf-new"></a>}}
\if{latex}{\out{\hypertarget{method-DuplicateRuleProblemAllOf-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new DuplicateRuleProblemAllOf class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuplicateRuleProblemAllOf$new(id = NULL, value = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{id}

\item{\code{value}}{value}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuplicateRuleProblemAllOf-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-DuplicateRuleProblemAllOf-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuplicateRuleProblemAllOf$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
DuplicateRuleProblemAllOf in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuplicateRuleProblemAllOf-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-DuplicateRuleProblemAllOf-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of DuplicateRuleProblemAllOf
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuplicateRuleProblemAllOf$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of DuplicateRuleProblemAllOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuplicateRuleProblemAllOf-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-DuplicateRuleProblemAllOf-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuplicateRuleProblemAllOf$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
DuplicateRuleProblemAllOf in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuplicateRuleProblemAllOf-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-DuplicateRuleProblemAllOf-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of DuplicateRuleProblemAllOf
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuplicateRuleProblemAllOf$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of DuplicateRuleProblemAllOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuplicateRuleProblemAllOf-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-DuplicateRuleProblemAllOf-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to DuplicateRuleProblemAllOf and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuplicateRuleProblemAllOf$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuplicateRuleProblemAllOf-toString"></a>}}
\if{latex}{\out{\hypertarget{method-DuplicateRuleProblemAllOf-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuplicateRuleProblemAllOf$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of DuplicateRuleProblemAllOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuplicateRuleProblemAllOf-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-DuplicateRuleProblemAllOf-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuplicateRuleProblemAllOf$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuplicateRuleProblemAllOf-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-DuplicateRuleProblemAllOf-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuplicateRuleProblemAllOf$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DuplicateRuleProblemAllOf-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DuplicateRuleProblemAllOf-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DuplicateRuleProblemAllOf$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
