% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tweet_create_request_reply.R
\docType{class}
\name{TweetCreateRequestReply}
\alias{TweetCreateRequestReply}
\title{TweetCreateRequestReply}
\format{
An \code{R6Class} generator object
}
\description{
TweetCreateRequestReply Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{exclude_reply_user_ids}}{list( character ) [optional]}

\item{\code{in_reply_to_tweet_id}}{character}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TweetCreateRequestReply-new}{\code{TweetCreateRequestReply$new()}}
\item \href{#method-TweetCreateRequestReply-toJSON}{\code{TweetCreateRequestReply$toJSON()}}
\item \href{#method-TweetCreateRequestReply-fromJSON}{\code{TweetCreateRequestReply$fromJSON()}}
\item \href{#method-TweetCreateRequestReply-toJSONString}{\code{TweetCreateRequestReply$toJSONString()}}
\item \href{#method-TweetCreateRequestReply-fromJSONString}{\code{TweetCreateRequestReply$fromJSONString()}}
\item \href{#method-TweetCreateRequestReply-validateJSON}{\code{TweetCreateRequestReply$validateJSON()}}
\item \href{#method-TweetCreateRequestReply-toString}{\code{TweetCreateRequestReply$toString()}}
\item \href{#method-TweetCreateRequestReply-isValid}{\code{TweetCreateRequestReply$isValid()}}
\item \href{#method-TweetCreateRequestReply-getInvalidFields}{\code{TweetCreateRequestReply$getInvalidFields()}}
\item \href{#method-TweetCreateRequestReply-clone}{\code{TweetCreateRequestReply$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetCreateRequestReply-new"></a>}}
\if{latex}{\out{\hypertarget{method-TweetCreateRequestReply-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new TweetCreateRequestReply class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetCreateRequestReply$new(
  in_reply_to_tweet_id,
  exclude_reply_user_ids = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{in_reply_to_tweet_id}}{Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.}

\item{\code{exclude_reply_user_ids}}{A list of User Ids to be excluded from the reply Tweet.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetCreateRequestReply-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-TweetCreateRequestReply-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetCreateRequestReply$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TweetCreateRequestReply in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetCreateRequestReply-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-TweetCreateRequestReply-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of TweetCreateRequestReply
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetCreateRequestReply$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of TweetCreateRequestReply
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetCreateRequestReply-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-TweetCreateRequestReply-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetCreateRequestReply$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TweetCreateRequestReply in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetCreateRequestReply-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-TweetCreateRequestReply-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of TweetCreateRequestReply
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetCreateRequestReply$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of TweetCreateRequestReply
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetCreateRequestReply-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-TweetCreateRequestReply-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to TweetCreateRequestReply and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetCreateRequestReply$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetCreateRequestReply-toString"></a>}}
\if{latex}{\out{\hypertarget{method-TweetCreateRequestReply-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetCreateRequestReply$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of TweetCreateRequestReply
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetCreateRequestReply-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-TweetCreateRequestReply-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetCreateRequestReply$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetCreateRequestReply-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-TweetCreateRequestReply-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetCreateRequestReply$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetCreateRequestReply-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TweetCreateRequestReply-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetCreateRequestReply$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
