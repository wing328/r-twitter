% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/space.R
\docType{class}
\name{Space}
\alias{Space}
\title{Space}
\format{
An \code{R6Class} generator object
}
\description{
Space Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{created_at}}{character [optional]}

\item{\code{creator_id}}{character [optional]}

\item{\code{ended_at}}{character [optional]}

\item{\code{host_ids}}{list( character ) [optional]}

\item{\code{id}}{character}

\item{\code{invited_user_ids}}{list( character ) [optional]}

\item{\code{is_ticketed}}{character [optional]}

\item{\code{lang}}{character [optional]}

\item{\code{participant_count}}{integer [optional]}

\item{\code{scheduled_start}}{character [optional]}

\item{\code{speaker_ids}}{list( character ) [optional]}

\item{\code{started_at}}{character [optional]}

\item{\code{state}}{character}

\item{\code{subscriber_count}}{integer [optional]}

\item{\code{title}}{character [optional]}

\item{\code{topics}}{list( \link{SpaceTopicsInner} ) [optional]}

\item{\code{updated_at}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Space-new}{\code{Space$new()}}
\item \href{#method-Space-toJSON}{\code{Space$toJSON()}}
\item \href{#method-Space-fromJSON}{\code{Space$fromJSON()}}
\item \href{#method-Space-toJSONString}{\code{Space$toJSONString()}}
\item \href{#method-Space-fromJSONString}{\code{Space$fromJSONString()}}
\item \href{#method-Space-validateJSON}{\code{Space$validateJSON()}}
\item \href{#method-Space-toString}{\code{Space$toString()}}
\item \href{#method-Space-isValid}{\code{Space$isValid()}}
\item \href{#method-Space-getInvalidFields}{\code{Space$getInvalidFields()}}
\item \href{#method-Space-clone}{\code{Space$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Space-new"></a>}}
\if{latex}{\out{\hypertarget{method-Space-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Space class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Space$new(
  id,
  state,
  created_at = NULL,
  creator_id = NULL,
  ended_at = NULL,
  host_ids = NULL,
  invited_user_ids = NULL,
  is_ticketed = NULL,
  lang = NULL,
  participant_count = NULL,
  scheduled_start = NULL,
  speaker_ids = NULL,
  started_at = NULL,
  subscriber_count = NULL,
  title = NULL,
  topics = NULL,
  updated_at = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{The unique identifier of this Space.}

\item{\code{state}}{The current state of the Space.}

\item{\code{created_at}}{Creation time of the Space.}

\item{\code{creator_id}}{Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.}

\item{\code{ended_at}}{End time of the Space.}

\item{\code{host_ids}}{The user ids for the hosts of the Space.}

\item{\code{invited_user_ids}}{An array of user ids for people who were invited to a Space.}

\item{\code{is_ticketed}}{Denotes if the Space is a ticketed Space.}

\item{\code{lang}}{The language of the Space.}

\item{\code{participant_count}}{The number of participants in a Space.}

\item{\code{scheduled_start}}{A date time stamp for when a Space is scheduled to begin.}

\item{\code{speaker_ids}}{An array of user ids for people who were speakers in a Space.}

\item{\code{started_at}}{When the Space was started as a date string.}

\item{\code{subscriber_count}}{The number of people who have either purchased a ticket or set a reminder for this Space.}

\item{\code{title}}{The title of the Space.}

\item{\code{topics}}{The topics of a Space, as selected by its creator.}

\item{\code{updated_at}}{When the Space was last updated.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Space-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Space-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Space$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Space in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Space-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Space-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Space
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Space$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Space
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Space-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Space-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Space$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Space in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Space-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Space-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Space
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Space$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Space
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Space-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Space-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Space and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Space$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Space-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Space-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Space$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Space
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Space-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Space-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Space$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Space-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Space-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Space$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Space-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Space-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Space$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
