% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list_add_user_request.R
\docType{class}
\name{ListAddUserRequest}
\alias{ListAddUserRequest}
\title{ListAddUserRequest}
\format{
An \code{R6Class} generator object
}
\description{
ListAddUserRequest Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{user_id}}{character}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ListAddUserRequest-new}{\code{ListAddUserRequest$new()}}
\item \href{#method-ListAddUserRequest-toJSON}{\code{ListAddUserRequest$toJSON()}}
\item \href{#method-ListAddUserRequest-fromJSON}{\code{ListAddUserRequest$fromJSON()}}
\item \href{#method-ListAddUserRequest-toJSONString}{\code{ListAddUserRequest$toJSONString()}}
\item \href{#method-ListAddUserRequest-fromJSONString}{\code{ListAddUserRequest$fromJSONString()}}
\item \href{#method-ListAddUserRequest-validateJSON}{\code{ListAddUserRequest$validateJSON()}}
\item \href{#method-ListAddUserRequest-toString}{\code{ListAddUserRequest$toString()}}
\item \href{#method-ListAddUserRequest-isValid}{\code{ListAddUserRequest$isValid()}}
\item \href{#method-ListAddUserRequest-getInvalidFields}{\code{ListAddUserRequest$getInvalidFields()}}
\item \href{#method-ListAddUserRequest-clone}{\code{ListAddUserRequest$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListAddUserRequest-new"></a>}}
\if{latex}{\out{\hypertarget{method-ListAddUserRequest-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ListAddUserRequest class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListAddUserRequest$new(user_id, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{user_id}}{Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListAddUserRequest-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ListAddUserRequest-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListAddUserRequest$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ListAddUserRequest in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListAddUserRequest-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ListAddUserRequest-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of ListAddUserRequest
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListAddUserRequest$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ListAddUserRequest
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListAddUserRequest-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ListAddUserRequest-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListAddUserRequest$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ListAddUserRequest in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListAddUserRequest-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ListAddUserRequest-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of ListAddUserRequest
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListAddUserRequest$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ListAddUserRequest
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListAddUserRequest-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ListAddUserRequest-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to ListAddUserRequest and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListAddUserRequest$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListAddUserRequest-toString"></a>}}
\if{latex}{\out{\hypertarget{method-ListAddUserRequest-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListAddUserRequest$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of ListAddUserRequest
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListAddUserRequest-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-ListAddUserRequest-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListAddUserRequest$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListAddUserRequest-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-ListAddUserRequest-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListAddUserRequest$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListAddUserRequest-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ListAddUserRequest-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListAddUserRequest$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
