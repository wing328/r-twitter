% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/url_image.R
\docType{class}
\name{UrlImage}
\alias{UrlImage}
\title{UrlImage}
\format{
An \code{R6Class} generator object
}
\description{
UrlImage Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{height}}{integer [optional]}

\item{\code{url}}{character [optional]}

\item{\code{width}}{integer [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-UrlImage-new}{\code{UrlImage$new()}}
\item \href{#method-UrlImage-toJSON}{\code{UrlImage$toJSON()}}
\item \href{#method-UrlImage-fromJSON}{\code{UrlImage$fromJSON()}}
\item \href{#method-UrlImage-toJSONString}{\code{UrlImage$toJSONString()}}
\item \href{#method-UrlImage-fromJSONString}{\code{UrlImage$fromJSONString()}}
\item \href{#method-UrlImage-validateJSON}{\code{UrlImage$validateJSON()}}
\item \href{#method-UrlImage-toString}{\code{UrlImage$toString()}}
\item \href{#method-UrlImage-isValid}{\code{UrlImage$isValid()}}
\item \href{#method-UrlImage-getInvalidFields}{\code{UrlImage$getInvalidFields()}}
\item \href{#method-UrlImage-clone}{\code{UrlImage$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UrlImage-new"></a>}}
\if{latex}{\out{\hypertarget{method-UrlImage-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new UrlImage class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UrlImage$new(height = NULL, url = NULL, width = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{height}}{The height of the media in pixels.}

\item{\code{url}}{A validly formatted URL.}

\item{\code{width}}{The width of the media in pixels.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UrlImage-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-UrlImage-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UrlImage$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
UrlImage in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UrlImage-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-UrlImage-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of UrlImage
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UrlImage$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of UrlImage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UrlImage-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-UrlImage-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UrlImage$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
UrlImage in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UrlImage-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-UrlImage-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of UrlImage
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UrlImage$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of UrlImage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UrlImage-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-UrlImage-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to UrlImage and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UrlImage$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UrlImage-toString"></a>}}
\if{latex}{\out{\hypertarget{method-UrlImage-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UrlImage$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of UrlImage
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UrlImage-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-UrlImage-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UrlImage$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UrlImage-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-UrlImage-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UrlImage$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UrlImage-clone"></a>}}
\if{latex}{\out{\hypertarget{method-UrlImage-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UrlImage$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
