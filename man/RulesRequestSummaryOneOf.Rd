% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rules_request_summary_one_of.R
\docType{class}
\name{RulesRequestSummaryOneOf}
\alias{RulesRequestSummaryOneOf}
\title{RulesRequestSummaryOneOf}
\format{
An \code{R6Class} generator object
}
\description{
RulesRequestSummaryOneOf Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{created}}{integer}

\item{\code{invalid}}{integer}

\item{\code{not_created}}{integer}

\item{\code{valid}}{integer}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-RulesRequestSummaryOneOf-new}{\code{RulesRequestSummaryOneOf$new()}}
\item \href{#method-RulesRequestSummaryOneOf-toJSON}{\code{RulesRequestSummaryOneOf$toJSON()}}
\item \href{#method-RulesRequestSummaryOneOf-fromJSON}{\code{RulesRequestSummaryOneOf$fromJSON()}}
\item \href{#method-RulesRequestSummaryOneOf-toJSONString}{\code{RulesRequestSummaryOneOf$toJSONString()}}
\item \href{#method-RulesRequestSummaryOneOf-fromJSONString}{\code{RulesRequestSummaryOneOf$fromJSONString()}}
\item \href{#method-RulesRequestSummaryOneOf-validateJSON}{\code{RulesRequestSummaryOneOf$validateJSON()}}
\item \href{#method-RulesRequestSummaryOneOf-toString}{\code{RulesRequestSummaryOneOf$toString()}}
\item \href{#method-RulesRequestSummaryOneOf-isValid}{\code{RulesRequestSummaryOneOf$isValid()}}
\item \href{#method-RulesRequestSummaryOneOf-getInvalidFields}{\code{RulesRequestSummaryOneOf$getInvalidFields()}}
\item \href{#method-RulesRequestSummaryOneOf-clone}{\code{RulesRequestSummaryOneOf$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesRequestSummaryOneOf-new"></a>}}
\if{latex}{\out{\hypertarget{method-RulesRequestSummaryOneOf-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new RulesRequestSummaryOneOf class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesRequestSummaryOneOf$new(created, invalid, not_created, valid, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{created}}{Number of user-specified stream filtering rules that were created.}

\item{\code{invalid}}{Number of invalid user-specified stream filtering rules.}

\item{\code{not_created}}{Number of user-specified stream filtering rules that were not created.}

\item{\code{valid}}{Number of valid user-specified stream filtering rules.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesRequestSummaryOneOf-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-RulesRequestSummaryOneOf-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesRequestSummaryOneOf$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
RulesRequestSummaryOneOf in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesRequestSummaryOneOf-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-RulesRequestSummaryOneOf-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of RulesRequestSummaryOneOf
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesRequestSummaryOneOf$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of RulesRequestSummaryOneOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesRequestSummaryOneOf-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-RulesRequestSummaryOneOf-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesRequestSummaryOneOf$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
RulesRequestSummaryOneOf in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesRequestSummaryOneOf-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-RulesRequestSummaryOneOf-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of RulesRequestSummaryOneOf
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesRequestSummaryOneOf$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of RulesRequestSummaryOneOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesRequestSummaryOneOf-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-RulesRequestSummaryOneOf-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to RulesRequestSummaryOneOf and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesRequestSummaryOneOf$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesRequestSummaryOneOf-toString"></a>}}
\if{latex}{\out{\hypertarget{method-RulesRequestSummaryOneOf-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesRequestSummaryOneOf$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of RulesRequestSummaryOneOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesRequestSummaryOneOf-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-RulesRequestSummaryOneOf-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesRequestSummaryOneOf$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesRequestSummaryOneOf-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-RulesRequestSummaryOneOf-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesRequestSummaryOneOf$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesRequestSummaryOneOf-clone"></a>}}
\if{latex}{\out{\hypertarget{method-RulesRequestSummaryOneOf-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesRequestSummaryOneOf$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
