% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tweet.R
\docType{class}
\name{Tweet}
\alias{Tweet}
\title{Tweet}
\format{
An \code{R6Class} generator object
}
\description{
Tweet Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{attachments}}{\link{TweetAttachments} [optional]}

\item{\code{author_id}}{character [optional]}

\item{\code{context_annotations}}{list( \link{ContextAnnotation} ) [optional]}

\item{\code{conversation_id}}{character [optional]}

\item{\code{created_at}}{character [optional]}

\item{\code{entities}}{\link{FullTextEntities} [optional]}

\item{\code{geo}}{\link{TweetGeo} [optional]}

\item{\code{id}}{character}

\item{\code{in_reply_to_user_id}}{character [optional]}

\item{\code{lang}}{character [optional]}

\item{\code{non_public_metrics}}{\link{TweetNonPublicMetrics} [optional]}

\item{\code{organic_metrics}}{\link{TweetOrganicMetrics} [optional]}

\item{\code{possibly_sensitive}}{character [optional]}

\item{\code{promoted_metrics}}{\link{TweetPromotedMetrics} [optional]}

\item{\code{public_metrics}}{\link{TweetPublicMetrics} [optional]}

\item{\code{referenced_tweets}}{list( \link{TweetReferencedTweetsInner} ) [optional]}

\item{\code{reply_settings}}{\link{ReplySettings} [optional]}

\item{\code{source}}{character [optional]}

\item{\code{text}}{character}

\item{\code{withheld}}{\link{TweetWithheld} [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Tweet-new}{\code{Tweet$new()}}
\item \href{#method-Tweet-toJSON}{\code{Tweet$toJSON()}}
\item \href{#method-Tweet-fromJSON}{\code{Tweet$fromJSON()}}
\item \href{#method-Tweet-toJSONString}{\code{Tweet$toJSONString()}}
\item \href{#method-Tweet-fromJSONString}{\code{Tweet$fromJSONString()}}
\item \href{#method-Tweet-validateJSON}{\code{Tweet$validateJSON()}}
\item \href{#method-Tweet-toString}{\code{Tweet$toString()}}
\item \href{#method-Tweet-isValid}{\code{Tweet$isValid()}}
\item \href{#method-Tweet-getInvalidFields}{\code{Tweet$getInvalidFields()}}
\item \href{#method-Tweet-clone}{\code{Tweet$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tweet-new"></a>}}
\if{latex}{\out{\hypertarget{method-Tweet-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Tweet class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tweet$new(
  id,
  text,
  attachments = NULL,
  author_id = NULL,
  context_annotations = NULL,
  conversation_id = NULL,
  created_at = NULL,
  entities = NULL,
  geo = NULL,
  in_reply_to_user_id = NULL,
  lang = NULL,
  non_public_metrics = NULL,
  organic_metrics = NULL,
  possibly_sensitive = NULL,
  promoted_metrics = NULL,
  public_metrics = NULL,
  referenced_tweets = NULL,
  reply_settings = NULL,
  source = NULL,
  withheld = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.}

\item{\code{text}}{The content of the Tweet.}

\item{\code{attachments}}{attachments}

\item{\code{author_id}}{Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.}

\item{\code{context_annotations}}{context_annotations}

\item{\code{conversation_id}}{Unique identifier of this Tweet. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.}

\item{\code{created_at}}{Creation time of the Tweet.}

\item{\code{entities}}{entities}

\item{\code{geo}}{geo}

\item{\code{in_reply_to_user_id}}{Unique identifier of this User. This is returned as a string in order to avoid complications with languages and tools that cannot handle large integers.}

\item{\code{lang}}{Language of the Tweet, if detected by Twitter. Returned as a BCP47 language tag.}

\item{\code{non_public_metrics}}{non_public_metrics}

\item{\code{organic_metrics}}{organic_metrics}

\item{\code{possibly_sensitive}}{Indicates if this Tweet contains URLs marked as sensitive, for example content suitable for mature audiences.}

\item{\code{promoted_metrics}}{promoted_metrics}

\item{\code{public_metrics}}{public_metrics}

\item{\code{referenced_tweets}}{A list of Tweets this Tweet refers to. For example, if the parent Tweet is a Retweet, a Quoted Tweet or a Reply, it will include the related Tweet referenced to by its parent.}

\item{\code{reply_settings}}{reply_settings}

\item{\code{source}}{The name of the app the user Tweeted from.}

\item{\code{withheld}}{withheld}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tweet-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Tweet-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tweet$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Tweet in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tweet-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Tweet-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Tweet
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tweet$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Tweet
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tweet-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Tweet-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tweet$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Tweet in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tweet-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Tweet-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Tweet
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tweet$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Tweet
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tweet-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Tweet-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Tweet and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tweet$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tweet-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Tweet-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tweet$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Tweet
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tweet-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Tweet-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tweet$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tweet-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Tweet-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tweet$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Tweet-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Tweet-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Tweet$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
