% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tweet_withheld.R
\docType{class}
\name{TweetWithheld}
\alias{TweetWithheld}
\title{TweetWithheld}
\format{
An \code{R6Class} generator object
}
\description{
TweetWithheld Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{copyright}}{character}

\item{\code{country_codes}}{list( character )}

\item{\code{scope}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TweetWithheld-new}{\code{TweetWithheld$new()}}
\item \href{#method-TweetWithheld-toJSON}{\code{TweetWithheld$toJSON()}}
\item \href{#method-TweetWithheld-fromJSON}{\code{TweetWithheld$fromJSON()}}
\item \href{#method-TweetWithheld-toJSONString}{\code{TweetWithheld$toJSONString()}}
\item \href{#method-TweetWithheld-fromJSONString}{\code{TweetWithheld$fromJSONString()}}
\item \href{#method-TweetWithheld-validateJSON}{\code{TweetWithheld$validateJSON()}}
\item \href{#method-TweetWithheld-toString}{\code{TweetWithheld$toString()}}
\item \href{#method-TweetWithheld-isValid}{\code{TweetWithheld$isValid()}}
\item \href{#method-TweetWithheld-getInvalidFields}{\code{TweetWithheld$getInvalidFields()}}
\item \href{#method-TweetWithheld-clone}{\code{TweetWithheld$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheld-new"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheld-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new TweetWithheld class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheld$new(copyright, country_codes, scope = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{copyright}}{Indicates if the content is being withheld for on the basis of copyright infringement.}

\item{\code{country_codes}}{Provides a list of countries where this content is not available.}

\item{\code{scope}}{Indicates whether the content being withheld is the `tweet` or a `user`.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheld-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheld-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheld$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TweetWithheld in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheld-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheld-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of TweetWithheld
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheld$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of TweetWithheld
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheld-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheld-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheld$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TweetWithheld in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheld-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheld-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of TweetWithheld
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheld$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of TweetWithheld
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheld-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheld-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to TweetWithheld and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheld$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheld-toString"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheld-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheld$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of TweetWithheld
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheld-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheld-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheld$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheld-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheld-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheld$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheld-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheld-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheld$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
