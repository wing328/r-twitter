% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rules_lookup_response.R
\docType{class}
\name{RulesLookupResponse}
\alias{RulesLookupResponse}
\title{RulesLookupResponse}
\format{
An \code{R6Class} generator object
}
\description{
RulesLookupResponse Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{data}}{list( \link{Rule} ) [optional]}

\item{\code{meta}}{\link{RulesResponseMetadata}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-RulesLookupResponse-new}{\code{RulesLookupResponse$new()}}
\item \href{#method-RulesLookupResponse-toJSON}{\code{RulesLookupResponse$toJSON()}}
\item \href{#method-RulesLookupResponse-fromJSON}{\code{RulesLookupResponse$fromJSON()}}
\item \href{#method-RulesLookupResponse-toJSONString}{\code{RulesLookupResponse$toJSONString()}}
\item \href{#method-RulesLookupResponse-fromJSONString}{\code{RulesLookupResponse$fromJSONString()}}
\item \href{#method-RulesLookupResponse-validateJSON}{\code{RulesLookupResponse$validateJSON()}}
\item \href{#method-RulesLookupResponse-toString}{\code{RulesLookupResponse$toString()}}
\item \href{#method-RulesLookupResponse-isValid}{\code{RulesLookupResponse$isValid()}}
\item \href{#method-RulesLookupResponse-getInvalidFields}{\code{RulesLookupResponse$getInvalidFields()}}
\item \href{#method-RulesLookupResponse-clone}{\code{RulesLookupResponse$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesLookupResponse-new"></a>}}
\if{latex}{\out{\hypertarget{method-RulesLookupResponse-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new RulesLookupResponse class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesLookupResponse$new(meta, data = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{meta}}{meta}

\item{\code{data}}{data}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesLookupResponse-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-RulesLookupResponse-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesLookupResponse$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
RulesLookupResponse in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesLookupResponse-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-RulesLookupResponse-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of RulesLookupResponse
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesLookupResponse$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of RulesLookupResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesLookupResponse-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-RulesLookupResponse-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesLookupResponse$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
RulesLookupResponse in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesLookupResponse-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-RulesLookupResponse-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of RulesLookupResponse
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesLookupResponse$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of RulesLookupResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesLookupResponse-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-RulesLookupResponse-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to RulesLookupResponse and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesLookupResponse$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesLookupResponse-toString"></a>}}
\if{latex}{\out{\hypertarget{method-RulesLookupResponse-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesLookupResponse$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of RulesLookupResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesLookupResponse-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-RulesLookupResponse-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesLookupResponse$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesLookupResponse-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-RulesLookupResponse-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesLookupResponse$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RulesLookupResponse-clone"></a>}}
\if{latex}{\out{\hypertarget{method-RulesLookupResponse-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RulesLookupResponse$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
