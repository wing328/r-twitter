% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/general_api.R
\docType{class}
\name{GeneralApi}
\alias{GeneralApi}
\title{General operations}
\format{
An \code{R6Class} generator object
}
\description{
twitter.General
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Methods}{

\describe{
\strong{ get_open_api_spec } \emph{ Returns the OpenAPI Specification document. }
Full OpenAPI Specification in JSON format. (See https://github.com/OAI/OpenAPI-Specification/blob/master/README.md)

\itemize{

\item On encountering errors, an error of subclass ApiException will be thrown.

\item status code : 200 | The request was successful

\item return type : object
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  get_open_api_spec  ####################

library(twitter)

#Returns the OpenAPI Specification document.
api.instance <- GeneralApi$new()

result <- tryCatch(
            api.instance$get_open_api_spec(),
            ApiException = function(ex) ex
         )
# In case of error, print the error object
if(!is.null(result$ApiException)) {
  cat(result$ApiException$toString())
} else {
# deserialized response object
response.object <- result$content
# response headers
response.headers <- result$response$headers
# response status code
response.status.code <- result$response$status_code
}


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{api_client}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-GeneralApi-new}{\code{GeneralApi$new()}}
\item \href{#method-GeneralApi-get_open_api_spec}{\code{GeneralApi$get_open_api_spec()}}
\item \href{#method-GeneralApi-get_open_api_spec_with_http_info}{\code{GeneralApi$get_open_api_spec_with_http_info()}}
\item \href{#method-GeneralApi-clone}{\code{GeneralApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GeneralApi-new"></a>}}
\if{latex}{\out{\hypertarget{method-GeneralApi-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new GeneralApi.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GeneralApi$new(api_client)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{api_client}}{An instance of API client.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GeneralApi-get_open_api_spec"></a>}}
\if{latex}{\out{\hypertarget{method-GeneralApi-get_open_api_spec}{}}}
\subsection{Method \code{get_open_api_spec()}}{
Returns the OpenAPI Specification document.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GeneralApi$get_open_api_spec(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GeneralApi-get_open_api_spec_with_http_info"></a>}}
\if{latex}{\out{\hypertarget{method-GeneralApi-get_open_api_spec_with_http_info}{}}}
\subsection{Method \code{get_open_api_spec_with_http_info()}}{
Returns the OpenAPI Specification document.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GeneralApi$get_open_api_spec_with_http_info(data_file = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data_file}}{(optional) name of the data file to save the result}

\item{\code{...}}{Other optional arguments}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
API response (object) with additional information such as HTTP status code, headers
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GeneralApi-clone"></a>}}
\if{latex}{\out{\hypertarget{method-GeneralApi-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{GeneralApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
