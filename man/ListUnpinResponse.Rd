% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/list_unpin_response.R
\docType{class}
\name{ListUnpinResponse}
\alias{ListUnpinResponse}
\title{ListUnpinResponse}
\format{
An \code{R6Class} generator object
}
\description{
ListUnpinResponse Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{data}}{\link{ListPinnedResponseData} [optional]}

\item{\code{errors}}{list( \link{Problem} ) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ListUnpinResponse-new}{\code{ListUnpinResponse$new()}}
\item \href{#method-ListUnpinResponse-toJSON}{\code{ListUnpinResponse$toJSON()}}
\item \href{#method-ListUnpinResponse-fromJSON}{\code{ListUnpinResponse$fromJSON()}}
\item \href{#method-ListUnpinResponse-toJSONString}{\code{ListUnpinResponse$toJSONString()}}
\item \href{#method-ListUnpinResponse-fromJSONString}{\code{ListUnpinResponse$fromJSONString()}}
\item \href{#method-ListUnpinResponse-validateJSON}{\code{ListUnpinResponse$validateJSON()}}
\item \href{#method-ListUnpinResponse-toString}{\code{ListUnpinResponse$toString()}}
\item \href{#method-ListUnpinResponse-isValid}{\code{ListUnpinResponse$isValid()}}
\item \href{#method-ListUnpinResponse-getInvalidFields}{\code{ListUnpinResponse$getInvalidFields()}}
\item \href{#method-ListUnpinResponse-clone}{\code{ListUnpinResponse$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListUnpinResponse-new"></a>}}
\if{latex}{\out{\hypertarget{method-ListUnpinResponse-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ListUnpinResponse class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListUnpinResponse$new(data = NULL, errors = NULL, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{data}

\item{\code{errors}}{errors}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListUnpinResponse-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ListUnpinResponse-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListUnpinResponse$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ListUnpinResponse in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListUnpinResponse-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ListUnpinResponse-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of ListUnpinResponse
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListUnpinResponse$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ListUnpinResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListUnpinResponse-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ListUnpinResponse-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListUnpinResponse$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ListUnpinResponse in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListUnpinResponse-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ListUnpinResponse-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of ListUnpinResponse
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListUnpinResponse$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ListUnpinResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListUnpinResponse-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ListUnpinResponse-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to ListUnpinResponse and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListUnpinResponse$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListUnpinResponse-toString"></a>}}
\if{latex}{\out{\hypertarget{method-ListUnpinResponse-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListUnpinResponse$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of ListUnpinResponse
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListUnpinResponse-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-ListUnpinResponse-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListUnpinResponse$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListUnpinResponse-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-ListUnpinResponse-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListUnpinResponse$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ListUnpinResponse-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ListUnpinResponse-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ListUnpinResponse$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
