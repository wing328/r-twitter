% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/client_forbidden_problem.R
\docType{class}
\name{ClientForbiddenProblem}
\alias{ClientForbiddenProblem}
\title{ClientForbiddenProblem}
\format{
An \code{R6Class} generator object
}
\description{
ClientForbiddenProblem Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Super class}{
\code{\link[twitter:Problem]{twitter::Problem}} -> \code{ClientForbiddenProblem}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{detail}}{character [optional]}

\item{\code{status}}{integer [optional]}

\item{\code{title}}{character}

\item{\code{type}}{character}

\item{\code{reason}}{character [optional]}

\item{\code{registration_url}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ClientForbiddenProblem-new}{\code{ClientForbiddenProblem$new()}}
\item \href{#method-ClientForbiddenProblem-toJSON}{\code{ClientForbiddenProblem$toJSON()}}
\item \href{#method-ClientForbiddenProblem-fromJSON}{\code{ClientForbiddenProblem$fromJSON()}}
\item \href{#method-ClientForbiddenProblem-toJSONString}{\code{ClientForbiddenProblem$toJSONString()}}
\item \href{#method-ClientForbiddenProblem-fromJSONString}{\code{ClientForbiddenProblem$fromJSONString()}}
\item \href{#method-ClientForbiddenProblem-validateJSON}{\code{ClientForbiddenProblem$validateJSON()}}
\item \href{#method-ClientForbiddenProblem-toString}{\code{ClientForbiddenProblem$toString()}}
\item \href{#method-ClientForbiddenProblem-isValid}{\code{ClientForbiddenProblem$isValid()}}
\item \href{#method-ClientForbiddenProblem-getInvalidFields}{\code{ClientForbiddenProblem$getInvalidFields()}}
\item \href{#method-ClientForbiddenProblem-clone}{\code{ClientForbiddenProblem$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientForbiddenProblem-new"></a>}}
\if{latex}{\out{\hypertarget{method-ClientForbiddenProblem-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ClientForbiddenProblem class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientForbiddenProblem$new(
  title,
  type,
  detail = NULL,
  status = NULL,
  reason = NULL,
  registration_url = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{title}}{title}

\item{\code{type}}{type}

\item{\code{detail}}{detail}

\item{\code{status}}{status}

\item{\code{reason}}{reason}

\item{\code{registration_url}}{registration_url}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientForbiddenProblem-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ClientForbiddenProblem-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientForbiddenProblem$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ClientForbiddenProblem in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientForbiddenProblem-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ClientForbiddenProblem-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of ClientForbiddenProblem
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientForbiddenProblem$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ClientForbiddenProblem
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientForbiddenProblem-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ClientForbiddenProblem-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientForbiddenProblem$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ClientForbiddenProblem in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientForbiddenProblem-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ClientForbiddenProblem-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of ClientForbiddenProblem
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientForbiddenProblem$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ClientForbiddenProblem
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientForbiddenProblem-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ClientForbiddenProblem-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to ClientForbiddenProblem and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientForbiddenProblem$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientForbiddenProblem-toString"></a>}}
\if{latex}{\out{\hypertarget{method-ClientForbiddenProblem-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientForbiddenProblem$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of ClientForbiddenProblem
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientForbiddenProblem-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-ClientForbiddenProblem-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientForbiddenProblem$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientForbiddenProblem-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-ClientForbiddenProblem-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientForbiddenProblem$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ClientForbiddenProblem-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ClientForbiddenProblem-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClientForbiddenProblem$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
