% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/user_profile_modification_object_schema.R
\docType{class}
\name{UserProfileModificationObjectSchema}
\alias{UserProfileModificationObjectSchema}
\title{UserProfileModificationObjectSchema}
\format{
An \code{R6Class} generator object
}
\description{
UserProfileModificationObjectSchema Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{event_at}}{character}

\item{\code{new_value}}{character}

\item{\code{profile_field}}{character}

\item{\code{user}}{\link{UserComplianceSchemaUser}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-UserProfileModificationObjectSchema-new}{\code{UserProfileModificationObjectSchema$new()}}
\item \href{#method-UserProfileModificationObjectSchema-toJSON}{\code{UserProfileModificationObjectSchema$toJSON()}}
\item \href{#method-UserProfileModificationObjectSchema-fromJSON}{\code{UserProfileModificationObjectSchema$fromJSON()}}
\item \href{#method-UserProfileModificationObjectSchema-toJSONString}{\code{UserProfileModificationObjectSchema$toJSONString()}}
\item \href{#method-UserProfileModificationObjectSchema-fromJSONString}{\code{UserProfileModificationObjectSchema$fromJSONString()}}
\item \href{#method-UserProfileModificationObjectSchema-validateJSON}{\code{UserProfileModificationObjectSchema$validateJSON()}}
\item \href{#method-UserProfileModificationObjectSchema-toString}{\code{UserProfileModificationObjectSchema$toString()}}
\item \href{#method-UserProfileModificationObjectSchema-isValid}{\code{UserProfileModificationObjectSchema$isValid()}}
\item \href{#method-UserProfileModificationObjectSchema-getInvalidFields}{\code{UserProfileModificationObjectSchema$getInvalidFields()}}
\item \href{#method-UserProfileModificationObjectSchema-clone}{\code{UserProfileModificationObjectSchema$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileModificationObjectSchema-new"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileModificationObjectSchema-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new UserProfileModificationObjectSchema class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileModificationObjectSchema$new(
  event_at,
  new_value,
  profile_field,
  user,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{event_at}}{Event time.}

\item{\code{new_value}}{new_value}

\item{\code{profile_field}}{profile_field}

\item{\code{user}}{user}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileModificationObjectSchema-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileModificationObjectSchema-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileModificationObjectSchema$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
UserProfileModificationObjectSchema in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileModificationObjectSchema-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileModificationObjectSchema-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of UserProfileModificationObjectSchema
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileModificationObjectSchema$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of UserProfileModificationObjectSchema
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileModificationObjectSchema-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileModificationObjectSchema-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileModificationObjectSchema$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
UserProfileModificationObjectSchema in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileModificationObjectSchema-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileModificationObjectSchema-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of UserProfileModificationObjectSchema
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileModificationObjectSchema$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of UserProfileModificationObjectSchema
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileModificationObjectSchema-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileModificationObjectSchema-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to UserProfileModificationObjectSchema and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileModificationObjectSchema$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileModificationObjectSchema-toString"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileModificationObjectSchema-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileModificationObjectSchema$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of UserProfileModificationObjectSchema
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileModificationObjectSchema-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileModificationObjectSchema-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileModificationObjectSchema$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileModificationObjectSchema-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileModificationObjectSchema-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileModificationObjectSchema$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-UserProfileModificationObjectSchema-clone"></a>}}
\if{latex}{\out{\hypertarget{method-UserProfileModificationObjectSchema-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{UserProfileModificationObjectSchema$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
