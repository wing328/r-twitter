% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/video.R
\docType{class}
\name{Video}
\alias{Video}
\title{Video}
\format{
An \code{R6Class} generator object
}
\description{
Video Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Super class}{
\code{\link[twitter:Media]{twitter::Media}} -> \code{Video}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{height}}{integer [optional]}

\item{\code{media_key}}{character [optional]}

\item{\code{type}}{character}

\item{\code{width}}{integer [optional]}

\item{\code{duration_ms}}{integer [optional]}

\item{\code{non_public_metrics}}{\link{VideoAllOfNonPublicMetrics} [optional]}

\item{\code{organic_metrics}}{\link{VideoAllOfOrganicMetrics} [optional]}

\item{\code{preview_image_url}}{character [optional]}

\item{\code{promoted_metrics}}{\link{VideoAllOfPromotedMetrics} [optional]}

\item{\code{public_metrics}}{\link{VideoAllOfPublicMetrics} [optional]}

\item{\code{variants}}{list( \link{Variant} ) [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Video-new}{\code{Video$new()}}
\item \href{#method-Video-toJSON}{\code{Video$toJSON()}}
\item \href{#method-Video-fromJSON}{\code{Video$fromJSON()}}
\item \href{#method-Video-toJSONString}{\code{Video$toJSONString()}}
\item \href{#method-Video-fromJSONString}{\code{Video$fromJSONString()}}
\item \href{#method-Video-validateJSON}{\code{Video$validateJSON()}}
\item \href{#method-Video-toString}{\code{Video$toString()}}
\item \href{#method-Video-isValid}{\code{Video$isValid()}}
\item \href{#method-Video-getInvalidFields}{\code{Video$getInvalidFields()}}
\item \href{#method-Video-clone}{\code{Video$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Video-new"></a>}}
\if{latex}{\out{\hypertarget{method-Video-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Video class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Video$new(
  type,
  height = NULL,
  media_key = NULL,
  width = NULL,
  duration_ms = NULL,
  non_public_metrics = NULL,
  organic_metrics = NULL,
  preview_image_url = NULL,
  promoted_metrics = NULL,
  public_metrics = NULL,
  variants = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{type}

\item{\code{height}}{The height of the media in pixels.}

\item{\code{media_key}}{The Media Key identifier for this attachment.}

\item{\code{width}}{The width of the media in pixels.}

\item{\code{duration_ms}}{duration_ms}

\item{\code{non_public_metrics}}{non_public_metrics}

\item{\code{organic_metrics}}{organic_metrics}

\item{\code{preview_image_url}}{preview_image_url}

\item{\code{promoted_metrics}}{promoted_metrics}

\item{\code{public_metrics}}{public_metrics}

\item{\code{variants}}{An array of all available variants of the media.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Video-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Video-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Video$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Video in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Video-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Video-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Video
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Video$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Video
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Video-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Video-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Video$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Video in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Video-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Video-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Video
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Video$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Video
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Video-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Video-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Video and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Video$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Video-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Video-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Video$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Video
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Video-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Video-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Video$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Video-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Video-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Video$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Video-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Video-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Video$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
