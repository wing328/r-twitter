% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/photo.R
\docType{class}
\name{Photo}
\alias{Photo}
\title{Photo}
\format{
An \code{R6Class} generator object
}
\description{
Photo Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Super class}{
\code{\link[twitter:Media]{twitter::Media}} -> \code{Photo}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{height}}{integer [optional]}

\item{\code{media_key}}{character [optional]}

\item{\code{type}}{character}

\item{\code{width}}{integer [optional]}

\item{\code{alt_text}}{character [optional]}

\item{\code{url}}{character [optional]}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Photo-new}{\code{Photo$new()}}
\item \href{#method-Photo-toJSON}{\code{Photo$toJSON()}}
\item \href{#method-Photo-fromJSON}{\code{Photo$fromJSON()}}
\item \href{#method-Photo-toJSONString}{\code{Photo$toJSONString()}}
\item \href{#method-Photo-fromJSONString}{\code{Photo$fromJSONString()}}
\item \href{#method-Photo-validateJSON}{\code{Photo$validateJSON()}}
\item \href{#method-Photo-toString}{\code{Photo$toString()}}
\item \href{#method-Photo-isValid}{\code{Photo$isValid()}}
\item \href{#method-Photo-getInvalidFields}{\code{Photo$getInvalidFields()}}
\item \href{#method-Photo-clone}{\code{Photo$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Photo-new"></a>}}
\if{latex}{\out{\hypertarget{method-Photo-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Photo class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Photo$new(
  type,
  height = NULL,
  media_key = NULL,
  width = NULL,
  alt_text = NULL,
  url = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{type}

\item{\code{height}}{The height of the media in pixels.}

\item{\code{media_key}}{The Media Key identifier for this attachment.}

\item{\code{width}}{The width of the media in pixels.}

\item{\code{alt_text}}{alt_text}

\item{\code{url}}{url}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Photo-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Photo-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Photo$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Photo in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Photo-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Photo-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of Photo
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Photo$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Photo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Photo-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Photo-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Photo$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Photo in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Photo-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-Photo-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of Photo
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Photo$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of Photo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Photo-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-Photo-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to Photo and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Photo$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Photo-toString"></a>}}
\if{latex}{\out{\hypertarget{method-Photo-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Photo$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of Photo
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Photo-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-Photo-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Photo$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Photo-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-Photo-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Photo$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Photo-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Photo-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Photo$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
