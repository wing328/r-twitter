% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resource_not_found_problem_all_of.R
\docType{class}
\name{ResourceNotFoundProblemAllOf}
\alias{ResourceNotFoundProblemAllOf}
\title{ResourceNotFoundProblemAllOf}
\format{
An \code{R6Class} generator object
}
\description{
ResourceNotFoundProblemAllOf Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{parameter}}{character}

\item{\code{resource_id}}{character}

\item{\code{resource_type}}{character}

\item{\code{value}}{character}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-ResourceNotFoundProblemAllOf-new}{\code{ResourceNotFoundProblemAllOf$new()}}
\item \href{#method-ResourceNotFoundProblemAllOf-toJSON}{\code{ResourceNotFoundProblemAllOf$toJSON()}}
\item \href{#method-ResourceNotFoundProblemAllOf-fromJSON}{\code{ResourceNotFoundProblemAllOf$fromJSON()}}
\item \href{#method-ResourceNotFoundProblemAllOf-toJSONString}{\code{ResourceNotFoundProblemAllOf$toJSONString()}}
\item \href{#method-ResourceNotFoundProblemAllOf-fromJSONString}{\code{ResourceNotFoundProblemAllOf$fromJSONString()}}
\item \href{#method-ResourceNotFoundProblemAllOf-validateJSON}{\code{ResourceNotFoundProblemAllOf$validateJSON()}}
\item \href{#method-ResourceNotFoundProblemAllOf-toString}{\code{ResourceNotFoundProblemAllOf$toString()}}
\item \href{#method-ResourceNotFoundProblemAllOf-isValid}{\code{ResourceNotFoundProblemAllOf$isValid()}}
\item \href{#method-ResourceNotFoundProblemAllOf-getInvalidFields}{\code{ResourceNotFoundProblemAllOf$getInvalidFields()}}
\item \href{#method-ResourceNotFoundProblemAllOf-clone}{\code{ResourceNotFoundProblemAllOf$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResourceNotFoundProblemAllOf-new"></a>}}
\if{latex}{\out{\hypertarget{method-ResourceNotFoundProblemAllOf-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new ResourceNotFoundProblemAllOf class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResourceNotFoundProblemAllOf$new(
  parameter,
  resource_id,
  resource_type,
  value,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{parameter}}{parameter}

\item{\code{resource_id}}{resource_id}

\item{\code{resource_type}}{resource_type}

\item{\code{value}}{Value will match the schema of the field.}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResourceNotFoundProblemAllOf-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ResourceNotFoundProblemAllOf-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResourceNotFoundProblemAllOf$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ResourceNotFoundProblemAllOf in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResourceNotFoundProblemAllOf-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ResourceNotFoundProblemAllOf-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of ResourceNotFoundProblemAllOf
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResourceNotFoundProblemAllOf$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ResourceNotFoundProblemAllOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResourceNotFoundProblemAllOf-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ResourceNotFoundProblemAllOf-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResourceNotFoundProblemAllOf$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
ResourceNotFoundProblemAllOf in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResourceNotFoundProblemAllOf-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-ResourceNotFoundProblemAllOf-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of ResourceNotFoundProblemAllOf
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResourceNotFoundProblemAllOf$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of ResourceNotFoundProblemAllOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResourceNotFoundProblemAllOf-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-ResourceNotFoundProblemAllOf-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to ResourceNotFoundProblemAllOf and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResourceNotFoundProblemAllOf$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResourceNotFoundProblemAllOf-toString"></a>}}
\if{latex}{\out{\hypertarget{method-ResourceNotFoundProblemAllOf-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResourceNotFoundProblemAllOf$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of ResourceNotFoundProblemAllOf
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResourceNotFoundProblemAllOf-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-ResourceNotFoundProblemAllOf-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResourceNotFoundProblemAllOf$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResourceNotFoundProblemAllOf-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-ResourceNotFoundProblemAllOf-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResourceNotFoundProblemAllOf$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ResourceNotFoundProblemAllOf-clone"></a>}}
\if{latex}{\out{\hypertarget{method-ResourceNotFoundProblemAllOf-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ResourceNotFoundProblemAllOf$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
