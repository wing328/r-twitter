% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tweet_withheld_compliance_schema.R
\docType{class}
\name{TweetWithheldComplianceSchema}
\alias{TweetWithheldComplianceSchema}
\title{TweetWithheldComplianceSchema}
\format{
An \code{R6Class} generator object
}
\description{
TweetWithheldComplianceSchema Class
}
\details{
Twitter API v2

Twitter API v2 available endpoints

The version of the OpenAPI document: 2.49
Generated by: https://openapi-generator.tech
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{withheld}}{\link{TweetTakedownComplianceSchema}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TweetWithheldComplianceSchema-new}{\code{TweetWithheldComplianceSchema$new()}}
\item \href{#method-TweetWithheldComplianceSchema-toJSON}{\code{TweetWithheldComplianceSchema$toJSON()}}
\item \href{#method-TweetWithheldComplianceSchema-fromJSON}{\code{TweetWithheldComplianceSchema$fromJSON()}}
\item \href{#method-TweetWithheldComplianceSchema-toJSONString}{\code{TweetWithheldComplianceSchema$toJSONString()}}
\item \href{#method-TweetWithheldComplianceSchema-fromJSONString}{\code{TweetWithheldComplianceSchema$fromJSONString()}}
\item \href{#method-TweetWithheldComplianceSchema-validateJSON}{\code{TweetWithheldComplianceSchema$validateJSON()}}
\item \href{#method-TweetWithheldComplianceSchema-toString}{\code{TweetWithheldComplianceSchema$toString()}}
\item \href{#method-TweetWithheldComplianceSchema-isValid}{\code{TweetWithheldComplianceSchema$isValid()}}
\item \href{#method-TweetWithheldComplianceSchema-getInvalidFields}{\code{TweetWithheldComplianceSchema$getInvalidFields()}}
\item \href{#method-TweetWithheldComplianceSchema-clone}{\code{TweetWithheldComplianceSchema$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheldComplianceSchema-new"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheldComplianceSchema-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new TweetWithheldComplianceSchema class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheldComplianceSchema$new(withheld, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{withheld}}{withheld}

\item{\code{...}}{Other optional arguments.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheldComplianceSchema-toJSON"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheldComplianceSchema-toJSON}{}}}
\subsection{Method \code{toJSON()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheldComplianceSchema$toJSON()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TweetWithheldComplianceSchema in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheldComplianceSchema-fromJSON"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheldComplianceSchema-fromJSON}{}}}
\subsection{Method \code{fromJSON()}}{
Deserialize JSON string into an instance of TweetWithheldComplianceSchema
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheldComplianceSchema$fromJSON(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of TweetWithheldComplianceSchema
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheldComplianceSchema-toJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheldComplianceSchema-toJSONString}{}}}
\subsection{Method \code{toJSONString()}}{
To JSON String
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheldComplianceSchema$toJSONString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TweetWithheldComplianceSchema in JSON format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheldComplianceSchema-fromJSONString"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheldComplianceSchema-fromJSONString}{}}}
\subsection{Method \code{fromJSONString()}}{
Deserialize JSON string into an instance of TweetWithheldComplianceSchema
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheldComplianceSchema$fromJSONString(input_json)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input_json}}{the JSON input}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the instance of TweetWithheldComplianceSchema
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheldComplianceSchema-validateJSON"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheldComplianceSchema-validateJSON}{}}}
\subsection{Method \code{validateJSON()}}{
Validate JSON input with respect to TweetWithheldComplianceSchema and throw an exception if invalid
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheldComplianceSchema$validateJSON(input)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{input}}{the JSON input}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheldComplianceSchema-toString"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheldComplianceSchema-toString}{}}}
\subsection{Method \code{toString()}}{
To string (JSON format)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheldComplianceSchema$toString()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
String representation of TweetWithheldComplianceSchema
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheldComplianceSchema-isValid"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheldComplianceSchema-isValid}{}}}
\subsection{Method \code{isValid()}}{
Return true if the values in all fields are valid.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheldComplianceSchema$isValid()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
true if the values in all fields are valid.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheldComplianceSchema-getInvalidFields"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheldComplianceSchema-getInvalidFields}{}}}
\subsection{Method \code{getInvalidFields()}}{
Return a list of invalid fields (if any).
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheldComplianceSchema$getInvalidFields()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A list of invalid fields (if any).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TweetWithheldComplianceSchema-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TweetWithheldComplianceSchema-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TweetWithheldComplianceSchema$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
